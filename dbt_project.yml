
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'jaffle_shop'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'jaffle_shop'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.

# models:
#   jaffle_shop:
#     +materialized: table
#     example:
#       +materialized: view

models:
  jaffle_shop:  # This should match the project name
    +materialized: table
    staging:
      +materialized: view

# models:
#   jaffle_shop: # this needs to match the profile in your dbt_project.yml file
#     +materialized: table
#     models:
#       staging:
#         +materialized: table
#     target: dev
#     outputs:
#         dev:
#             type: bigquery
#             method: service-account
#             keyfile: /Users/ericchagoya/.dbt/ad-data-prod-edce-07d7240779dc.json # replace this with the full path to your keyfile
#             project: ad-data-prod-edce # Replace this with your project id
#             dataset: eric_testing # Replace this with dbt_your_name, e.g. dbt_bilbo #fake_artists fake_names
#             threads: 1
#             timeout_seconds: 300
#             location: US
#             priority: interactive
